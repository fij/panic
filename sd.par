PARAMETER FILE FOR sd_panic 
CONTENTS: usage notes, parameters
DOCUMENTATION: sd_doc

=================================================================

USAGE NOTES
===========

Please, do NOT change the 1st,2nd,3rd and 4th columns, and
do NOT include any other 'hashmarks' in this file.

1st	the 'hashmark'
2nd	variable type (int/float/string)
3rd 	1 interactive, 0 non-interactive
4th   	variable name
5th 	value

==============================================================

PARAMETERS
==========


# i 0 N0	200	initial number of particles

# f 0 RoomXSize	15.0
# f 0 RoomYSize	15.0
# f 0 DoorWidth	1.2
# f 0 WallWidth	1.0

particle diameters are chosen from (Dmean-deltaD,Dmean+deltaD)
with uniform distribution

# f 0 Dmean	0.6
# f 0 deltaD	0.1

constants for the 'psychological' potential

# f 1 A		25.0
# f 1 B		0.08
# f 1 A_fire	250.0
# f 1 B_fire	0.2

# i 1 FrictionSwitch 1	
	0: friction force: 	Gamma * (v_j-v_i)_tang
	1: friction force: 	Kappa*(r_0-r) * (v_j-v_i)_tang,	if r<r_0
				0,                       	if r>r_0

# f 1 Kappa	3000.0	friction constant
# f 1 Gamma	200.0	friction constant
# f 1 C_Young	750.0	Young coefficient		

# f 0 R		2.0	interaction radius for pedestrian-pedestrian
			and pedestrian-wall interactions
# f 0 R_fire	10.0	the fire front can be seen from this distance
# f 1 V0	5.0
# f 1 Tau	0.5	time constant of the "self-driving force" 
			(~ reaction time)

	noise
# f 0 GaMe	0.0	gauss mean
# f 1 GaTh 	1.0	gauss theta
# f 0 GaCM	3.0	gauss cut multiplier



	INJURIES


# i 0 InjurySwitch	1	which kind of injury should be used

	0 none
	1 a pedestrian is crushed (injured) if the sum of the magnitude of
	  Young forces exerted on it (by the boundaries and other
	  pedestrians) exceeds FCrush_over_1m * <the circumference of
	  the circle representing the pedestrian> 
	2 smoke/fire front started at t=SmokeStartTime, moving with VSmoke
	  towards exit
	  - smoke/fire front exerts repulsive force on
	    pedestrian i if it's within R
	    magnitude of force: A' * exp(-(r-r_i)/B), 
              where r=dist. to smoke/fire
	            direction: towards exit
	      and A' = A*AMult_forSmoke
	  - pedestrians passed by it will switch to v_0^i = 0
	    (passing is measured at the particle center)
	3 same as 2 except for the following:
	  - pedestrians passed by it will stop moving at all: v_i = 0
	    (passing is measured at the particle center)
	  


# f 0 SmokeStartTime	0.1	
# f 1 VSmoke		0.2
# f 1 FCrush_over_1m	200.0


	MORE
	----

# i 0 ColumnSwitch	1	0=no column
				1=cylindrical column with center at 
				(ColumnCenterX,ColumnCenterY) and
				diameter ColumnD

# f 0 ColumnCenterX	13.0
# f 0 ColumnCenterY	7.0
# f 0 ColumnD		2.0




	DRAWING & SAVING
	----------------

# s 0 BackGroundColorName	black
# s 0 InfoColorName	 	Wheat


# f 0 X11_Magn	20.0	picture magnification
# i 0 X11_Margin 20 	margin (in pixels)	
# i 0 X11_InFW	250	info field width
# i 0 X11_InFH	250	info field height
# i 0 X11_TLH	25	text line height
# i 0 X11_GrFH	30	graph field height	
# i 0 X11_RightRim 10	additional rim to be drawn on right edge

# s 0 X11_FontName 	10x20	  


	eps images

# f 0 EpsXS		600.0
# f 0 EpsYS		400.0
# f 0 EpsMinXMarg	40.0	minimum of eps x margin
# f 0 EpsMinYMarg	30.0
# f 0 EpsInFW	   	130.0	info field width
# f 0 EpsInFH		40.0    info field height
# f 0 EpsInTH		30.0    info text height

# f 0 EpsLineWidth	0.0

# i 0 EpsPicMult  1	how many identical eps images should be produced
			from one configuration
                        (it's not necessary to use 30 pictures a second
                         for the mpeg file, 10 is enough)

# i 0 Eps_iPF_first	1000    index of first picture file
# i 0 Eps_iPF_max	1200    maximum of iPF allowed 
				(iPF=index of picture file) 
                        NOTE: this is not the max. number of picture files,
                              since iPF is started with iPF_first


	X11 images

# i 1 SaveUN	0	> 0 means: save every SaveUN updates 
                        = 0 means: save every SaveST SimTime units
# i 1 DrawUN	0	(similarly to SaveUN)
# f 1 SaveST	1.0	if SaveUN=0, saving comes every SaveST seconds
# f 1 DrawST	0.033	if DrawUN=0, drawing comes every DrawST seconds

# i 1 Sleep	0	additional time to wait after every image
			(in seconds)

# f 1 DrawDMult	1.0	see at 'Draw'

# i 1 Draw	0
	 	      code  object(s)	size
		        0     disk    diameter = X11_Mag * D[i]
	 		1     disk    diameter = X11_Mag * D[i]
				AND circle diam.=X11_Mag * D[i]
	 		2     disk    diameter = X11_Mag * DrawDMult*D[i]
			 	AND circle diam.=X11_Mag * DrawDMult*D[i]
	       		(3	test)

	java data file

# f 0 JavaXS		500.0	x size of java field
# f 0 JavaYS		300.0
# f 0 JavaMinXMarg	10.0	minimum x margin
# f 0 JavaMinYMarg	10.0
# f 0 JavaTStep		0.067	time step
# f 0 JavaMaxTime	45.1	maximum simulation time



	SYSTEM	
	------

# i 0 RndSeed	123493		
# i 1 MaxUpdNum	10000000	maximum number of updates to be computed
# i 0 AyS	200000	

	AyS = array size
	
	on computers with little memory (or for long simulations), 
	this gives the size of the time window the data for which are
	stored in memory at one time 
	(should be <= MaxUpdNum, of course)

# f 0 MaxSimTime 10000.0 	max. simulation time (not CPU time)
# f 1 Vmax	20.0	maximal velocity (allowed in numerical method)
# f 0 H		1.1	

	H = Homogeneity, has to be > 1.0
            when initializing, the minimum
	    particle-p. distance is: H * <sum of the two particles' radii>
		p.-wall distance is: H * <radius of the particle> 

# f 1 DefaultDeltaT 	0.01 	default time step (decreased dynamically)
# f 1 C_NS		0.95	precision at potential forces
				( 0.0 < C_NS < 1.0 )

# f 1 V_ChangeLimit	0.01	limit for the change of the relative velocity
				during one iteration
